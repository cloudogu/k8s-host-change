// Code generated by mockery v2.20.0. DO NOT EDIT.

package hosts

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	v1 "k8s.io/api/apps/v1"
)

// mockDeploymentUpdater is an autogenerated mock type for the deploymentUpdater type
type mockDeploymentUpdater struct {
	mock.Mock
}

type mockDeploymentUpdater_Expecter struct {
	mock *mock.Mock
}

func (_m *mockDeploymentUpdater) EXPECT() *mockDeploymentUpdater_Expecter {
	return &mockDeploymentUpdater_Expecter{mock: &_m.Mock}
}

// Update provides a mock function with given fields: ctx, namespace, deployments
func (_m *mockDeploymentUpdater) Update(ctx context.Context, namespace string, deployments []v1.Deployment) error {
	ret := _m.Called(ctx, namespace, deployments)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, []v1.Deployment) error); ok {
		r0 = rf(ctx, namespace, deployments)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockDeploymentUpdater_Update_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Update'
type mockDeploymentUpdater_Update_Call struct {
	*mock.Call
}

// Update is a helper method to define mock.On call
//   - ctx context.Context
//   - namespace string
//   - deployments []v1.Deployment
func (_e *mockDeploymentUpdater_Expecter) Update(ctx interface{}, namespace interface{}, deployments interface{}) *mockDeploymentUpdater_Update_Call {
	return &mockDeploymentUpdater_Update_Call{Call: _e.mock.On("Update", ctx, namespace, deployments)}
}

func (_c *mockDeploymentUpdater_Update_Call) Run(run func(ctx context.Context, namespace string, deployments []v1.Deployment)) *mockDeploymentUpdater_Update_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].([]v1.Deployment))
	})
	return _c
}

func (_c *mockDeploymentUpdater_Update_Call) Return(_a0 error) *mockDeploymentUpdater_Update_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockDeploymentUpdater_Update_Call) RunAndReturn(run func(context.Context, string, []v1.Deployment) error) *mockDeploymentUpdater_Update_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTnewMockDeploymentUpdater interface {
	mock.TestingT
	Cleanup(func())
}

// newMockDeploymentUpdater creates a new instance of mockDeploymentUpdater. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockDeploymentUpdater(t mockConstructorTestingTnewMockDeploymentUpdater) *mockDeploymentUpdater {
	mock := &mockDeploymentUpdater{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
