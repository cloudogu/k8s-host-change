// Code generated by mockery v2.20.0. DO NOT EDIT.

package hosts

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	v1 "k8s.io/api/apps/v1"
)

// mockDoguDeploymentFetcher is an autogenerated mock type for the doguDeploymentFetcher type
type mockDoguDeploymentFetcher struct {
	mock.Mock
}

type mockDoguDeploymentFetcher_Expecter struct {
	mock *mock.Mock
}

func (_m *mockDoguDeploymentFetcher) EXPECT() *mockDoguDeploymentFetcher_Expecter {
	return &mockDoguDeploymentFetcher_Expecter{mock: &_m.Mock}
}

// FetchAll provides a mock function with given fields: ctx, namespace
func (_m *mockDoguDeploymentFetcher) FetchAll(ctx context.Context, namespace string) ([]v1.Deployment, error) {
	ret := _m.Called(ctx, namespace)

	var r0 []v1.Deployment
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) ([]v1.Deployment, error)); ok {
		return rf(ctx, namespace)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) []v1.Deployment); ok {
		r0 = rf(ctx, namespace)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]v1.Deployment)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, namespace)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mockDoguDeploymentFetcher_FetchAll_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FetchAll'
type mockDoguDeploymentFetcher_FetchAll_Call struct {
	*mock.Call
}

// FetchAll is a helper method to define mock.On call
//   - ctx context.Context
//   - namespace string
func (_e *mockDoguDeploymentFetcher_Expecter) FetchAll(ctx interface{}, namespace interface{}) *mockDoguDeploymentFetcher_FetchAll_Call {
	return &mockDoguDeploymentFetcher_FetchAll_Call{Call: _e.mock.On("FetchAll", ctx, namespace)}
}

func (_c *mockDoguDeploymentFetcher_FetchAll_Call) Run(run func(ctx context.Context, namespace string)) *mockDoguDeploymentFetcher_FetchAll_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *mockDoguDeploymentFetcher_FetchAll_Call) Return(_a0 []v1.Deployment, _a1 error) *mockDoguDeploymentFetcher_FetchAll_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *mockDoguDeploymentFetcher_FetchAll_Call) RunAndReturn(run func(context.Context, string) ([]v1.Deployment, error)) *mockDoguDeploymentFetcher_FetchAll_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTnewMockDoguDeploymentFetcher interface {
	mock.TestingT
	Cleanup(func())
}

// newMockDoguDeploymentFetcher creates a new instance of mockDoguDeploymentFetcher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockDoguDeploymentFetcher(t mockConstructorTestingTnewMockDoguDeploymentFetcher) *mockDoguDeploymentFetcher {
	mock := &mockDoguDeploymentFetcher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
